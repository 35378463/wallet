diff --git a/node_modules/tonweb/src/contract/dns/DnsItem.js b/node_modules/tonweb/src/contract/dns/DnsItem.js
index 9d03b42..d7ddf22 100644
--- a/node_modules/tonweb/src/contract/dns/DnsItem.js
+++ b/node_modules/tonweb/src/contract/dns/DnsItem.js
@@ -128,7 +128,7 @@ class DnsItem extends Contract {
 DnsItem.createChangeContentEntryBody = async (params) => {
     const body = new Cell();
     body.bits.writeUint(0x4eb1f0f9, 32); // OP
-    body.bits.writeUint(params.queryId || 0, 64); // query_id
+    // body.bits.writeUint(params.queryId || 0, 64); // query_id
     body.bits.writeUint(await categoryToBN(params.category), 256);
     if (params.value) {
         body.refs[0] = params.value;
diff --git a/node_modules/tonweb/src/contract/token/nft/NftUtils.js b/node_modules/tonweb/src/contract/token/nft/NftUtils.js
index 30a43a0..d065b5e 100644
--- a/node_modules/tonweb/src/contract/token/nft/NftUtils.js
+++ b/node_modules/tonweb/src/contract/token/nft/NftUtils.js
@@ -1,4 +1,5 @@
-const {Address} = require("../../../utils");
+
+const {Address, BN} = require("../../../utils");
 const {Cell} = require("../../../boc");
 
 const SNAKE_DATA_PREFIX = 0x00;
@@ -64,13 +65,13 @@ const parseOffchainUriCell = (cell) => {
  * @param bs    {BitString}
  * @param cursor    {number}
  * @param bits  {number}
- * @return {BigInt}
+ * @return {BN}
  */
 const readIntFromBitString = (bs, cursor, bits) => {
-    let n = BigInt(0);
+    let n = new BN('0');
     for (let i = 0; i < bits; i++) {
-        n *= BigInt(2);
-        n += BigInt(bs.get(cursor + i));
+        n = n.mul(new BN('2'));
+        n = n.add(new BN(bs.get(cursor + i) ? '1' : '0'));
     }
     return n;
 }
@@ -81,8 +82,8 @@ const readIntFromBitString = (bs, cursor, bits) => {
  */
 const parseAddress = cell => {
     let n = readIntFromBitString(cell.bits, 3, 8);
-    if (n > BigInt(127)) {
-        n = n - BigInt(256);
+    if (n.gt(new BN('127'))) {
+        n = n.sub(new BN('256'));
     }
     const hashPart = readIntFromBitString(cell.bits, 3 + 8, 256);
     if (n.toString(10) + ":" + hashPart.toString(16) === '0:0') return null;
